@page "/engine"
@using SkillsDatabase
<h3>Kenntnisbasierte Mitarbeitersuche</h3> 

<table>
    <tr>
        <td>

            <SkillsComponent proficienciesDTO=@proficienciesDTO />
        </td>
    </tr>
    <tr>
        <td><button name="addskill" @onclick="AddSkill">Hinzufügen</button></td>
        <td><button name="searchEmployees" @onclick="SearchEmployees">Suchen</button></td>
    </tr>
</table>
<table>
    <thead>
        <tr>
            <th>Vorname</th>
            <th>Nachname</th>
            <th>Kenntnis</th>
            <th>Stufe</th>
        </tr>
    </thead>
    <tbody>
        @{
            Employee? owner = null;
            foreach (var p in searchResult)
            {
                <tr>
                    <td>
                        @if (owner != p.Owner || searchResult.IndexOf(p) == 0)
                        {
                            @p.Owner.FirstName
                        }
                    </td>
                    <td>
                        @if (owner != p.Owner || searchResult.IndexOf(p) == 0)
                        {
                            @p.Owner.LastName
                        }
                    </td>
                    <td>
                        @p.Skill.Name
                    </td>
                    <td>
                        @p.Level
                    </td>
                </tr>
                owner = p.Owner;
            }
        }
    </tbody>
</table>

@code {
    SkillsDbContext context = Program.dbContextFactory.CreateDbContext();
    List<ProficiencyBaseDTO> proficienciesDTO = new();
    List<Proficiency> searchResult = new List<Proficiency>();

    private void AddSkill()
    {
        Console.WriteLine("AddSkill: ");
        proficienciesDTO.Add(new(string.Empty, ProficiencyLevel.Basic));
    }

    private void SearchEmployees()
    {
        Console.WriteLine("SearchEmployees: ");

        searchResult = context.GetProficiencies(proficienciesDTO);
    }
}
