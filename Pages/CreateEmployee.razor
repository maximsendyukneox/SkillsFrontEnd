@page "/create-employee"
@using SkillsDatabase
@using System
@inject NavigationManager nav

<h3>Mitarbeiter erfassen</h3>

<div>
    <table>
        <tr>
            <td>Vorname:</td>
            <td>
                <input type="text"  name="fname" @bind-value="FirstName" @bind-value:event="oninput"/>
            </td>
        </tr>
        <tr>
            <td>Nachname:</td>
            <td>
                <input type="text" name="lname" @bind-value="LastName" @bind-value:event="oninput" />
            </td>
        </tr>
        <tr>
            <td>Geburtsdatum:</td>
            <td>
                <input type="date" name="dateofbirth" @bind-value="DateOfBirth" @bind-value:event="oninput" />
            </td>
        </tr> 
    </table>
</div>

<div>
    <table>
        <tr>
            <td>
                <SkillsComponent NumberOfSkills=@StatischeKlasse.N />
            </td>
            <td>
                <table>
                    <tr>
                        <td><button name="addskill" @onclick="AddSkill">Neuen Skill hinzufügen</button></td>
                    </tr>
                    <tr>
                        <td><button name="save" @onclick="SaveEmployee">Speichern</button></td>
                    </tr>
                    <tr>
                        <td><button name="goback">Abbrechen</button></td>
                    </tr>
                    
                </table>
            </td>
        </tr>
    </table>
</div>


@code {
    string FirstName = String.Empty;
    string LastName = String.Empty;
    DateTime DateOfBirth = new DateTime(2000, 1, 1);

    private void AddSkill()
    {
        Console.WriteLine("AddSkill: " + FirstName + ", " + LastName + ", " + DateOfBirth);
        Console.WriteLine("AddSkill: " + StatischeKlasse.N);
        StatischeKlasse.N++;
        StatischeKlasse.skillLevelInputList.Item1.Add(string.Empty);
        StatischeKlasse.skillLevelInputList.Item2.Add(ProficiencyLevel.Basic);
        Console.WriteLine("AddSkill: " + StatischeKlasse.N);
        Console.WriteLine("AddSkill StatischeKlasse.skillLevelInputList.Item1.Count: " + StatischeKlasse.skillLevelInputList.Item1.Count);
        Console.WriteLine("AddSkill StatischeKlasse.skillLevelInputList.Item2.Count: " + StatischeKlasse.skillLevelInputList.Item2.Count);

    }

    private async Task SaveEmployee()
    {
        Console.WriteLine(FirstName + LastName + DateOfBirth);
        SkillsDatabase.Program.CreateEmployee(FirstName, LastName, DateOfBirth);

       

        
        @for (int i = 0; i < StatischeKlasse.N; StatischeKlasse.i = i++)
        {
            if (i == 0)
            {
                Console.WriteLine("SaveEmployee StatischeKlasse.N: " + StatischeKlasse.N);
                Console.WriteLine("SaveEmployee StatischeKlasse.skillLevelInputList.Item1.Count: " + StatischeKlasse.skillLevelInputList.Item1.Count);
                Console.WriteLine("SaveEmployee StatischeKlasse.skillLevelInputList.Item2.Count: " + StatischeKlasse.skillLevelInputList.Item2.Count);
            }
            SkillsDatabase.Program.CreateProficiency(StatischeKlasse.skillLevelInputList.Item1[i], StatischeKlasse.skillLevelInputList.Item2[i], StatischeKlasse.context.VisibleEmployees.Single(e => e.FirstName == FirstName && e.LastName == LastName && e.Birthday == DateOfBirth));
        }



        nav.NavigateTo("");

    }

}
 